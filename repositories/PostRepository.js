import Repository,{baseUrlBlog}from"./Repository";class PostRepository{constructor(a){this.callback=a}async getPosts(){const a=await Repository.get(`${baseUrlBlog}/${"/api/blog/getBlogs"}`).then(a=>0<a.data.data.length?a.data.data:null).catch(a=>({error:JSON.stringify(a)}));return a}async getPostBySlug(a){const b=await Repository.get(`${baseUrlBlog}/posts?slug=${a}`).then(a=>0<a.data.length?a.data[0]:null).catch(a=>({error:JSON.stringify(a)}));return b}async SPGetPostItemOfCollectionBySlug(a){const b=await Repository.post(`${baseUrlBlog}/${"/api/blog/getBlogs"}`,a).then(a=>a.data.data&&0<a.data.data.length?a.data.data:null).catch(a=>(console.log(JSON.stringify(a)),null));return console.log("response",b),b}async getPostItemsByKeyword(a){const b=await Repository.get(`${baseUrlBlog}/posts?title_contains=${a}`).then(a=>a.data).catch(a=>({error:JSON.stringify(a)}));return b}async getPostItemsByCategory(a){const b=await Repository.get(`${baseUrlBlog}/posts?title_contains=${a}`).then(a=>a.data).catch(a=>({error:JSON.stringify(a)}));return b}}export default new PostRepository;